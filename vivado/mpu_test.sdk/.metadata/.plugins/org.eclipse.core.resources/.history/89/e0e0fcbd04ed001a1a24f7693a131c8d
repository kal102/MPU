/*
 * main.c
 *
 *  Created on: 28.08.2020
 *      Author: Kacper
 */


#include "xparameters.h"
#include "xgpio.h"
#include "math.h"
#include "km_gpio.h"
#include "km_axis.h"

/***************************** Main function *********************************/

int main()
{
	XGpio ledGpio;

    volatile int outbuffer[20];

	/* Init GPIO leds */
	if(init(&ledGpio)) {
		goto FAILURE;
	}

// Test 1
    /* Send matrix A over AXI stream */
	outbuffer[0] = 36;
	outbuffer[1] = -127;
	outbuffer[2] = 9;
	Load(BUFFER_A, 0, 0, 1, 3, outbuffer);
	/* Send matrix B over AXI stream */
	outbuffer[0] = 99;
	outbuffer[1] = 101;
	outbuffer[2] = 13;
	outbuffer[3] = 13;
	outbuffer[4] = 18;
	outbuffer[5] = 118;
	outbuffer[6] = -115;
	outbuffer[7] = 1;
	outbuffer[8] = 61;
	Load(BUFFER_B, 0, 2, 3, 3, outbuffer);
	/* Send multiply command through AXI stream */
	Multiply(0, 2);
	/* Load result matrix from AXI stream and compare it with expected data*/
	outbuffer[0] = -9150;
	outbuffer[1] = -760;
	outbuffer[2] = -3722;
	if(!CompareResults(1, 3, outbuffer)){
		setLed(&ledGpio, 0x001);
	}
	setLed(&ledGpio, 0x001);

// Test 2
	/* Send matrix A over AXI stream */
	outbuffer[0] = -19;
	outbuffer[1] = -7;
	outbuffer[2] = -116;
	outbuffer[3] = -58;
	Load(BUFFER_A, 3, 0, 1, 3, outbuffer);
	/* Send matrix B over AXI stream */
	outbuffer[0] = -59;
	outbuffer[1] = 92;
	outbuffer[2] = -86;
	outbuffer[3] = -67;
	outbuffer[4] = -27;
	outbuffer[5] = 45;
	outbuffer[6] = 119;
	outbuffer[7] = 101;
	outbuffer[8] = 18;
	outbuffer[9] = 99;
	outbuffer[10] = -113;
	outbuffer[11] = 10;
	outbuffer[12] = -14;
	outbuffer[13] = -128;
	outbuffer[14] = -50;
	outbuffer[15] = 32;
	outbuffer[16] = -24;
	outbuffer[17] = -86;
	outbuffer[18] = -59;
	outbuffer[19] = -99;
	Load(BUFFER_B, 0, 3, 3, 3, outbuffer);
	/* Send multiply command through AXI stream */
	Multiply(3, 3);
	/* Load result matrix from AXI stream and compare it with expected data*/
	outbuffer[0] = -9150;
	outbuffer[1] = -760;
	outbuffer[2] = -3722;
	if(!CompareResults(1, 3, outbuffer)){
		setLed(&ledGpio, 1);
	}
	setLed(&ledGpio, 2);
	/* Failure or end trap */
	FAILURE:
	while(1);
}
